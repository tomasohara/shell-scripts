# Regular workflow for Github testing (n.b., runs remote on their servers)
#
# Note:
# - See act.yml for the local workflow file.
# - It also contains a bunch of tips.
#

name: Github-Tests

on: [push, pull_request]

jobs:

  build-and-test-runner:
    name: Build and Run Tests via Runner
    ## OLD:
    ## ## NOTE: need to track down differences between Docker and Runner runs
    ## ## TEMP: disable tests (and just run Docker version below)
    ## if: ${{ false }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04]
        ## TODO: os: [ubuntu-20.04, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
        ## TODO: 3.x [latest; -or latest, latest-1, latest-2, ...]

    steps:
      - name: Checkout Repository
        ## See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-versioned-actions
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          pip install --verbose --requirement requirements.txt

      - name: Run Python Tests under Runner
        run: |
          PYTHONPATH="$PWD:$PWD/tests:$PYTHONPATH" ./tests/run_tests.bash
          
  build-and-test-docker:
    name: Build and Run Tests via Docker
    ## TEMP: disable use of Docker
    ## TODO3: derive via environment or via github.event flags (see act.yml)
    if: false
    runs-on: [ubuntu-22.04]

    ## TEST:
    ## NOTE: following is for docker images on the hub
    ## container:
    ##   image: shell-scripts-dev
    ##   options: --user=root

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build docker image
        run: |
          docker build --tag shell-scripts-dev -f- . <Dockerfile

      - name: Run tests
        run: |
          ## OLD: docker run --rm --mount type=bind,source="$(pwd)",target=/home/shell-scripts shell-scripts-dev
          # Note: command format: docker run [OPTIONS] IMAGE [COMMAND] [ARG...];
          # The environment file normally has no entries (i.e., just comments).
          docker run --env-file _temp-user-docker.env --rm --mount type=bind,source="$(pwd)",target=/home/shell-scripts shell-scripts-dev
