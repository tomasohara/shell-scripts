# This workflow will run the Python and Bash alias tests
#
# Notes:
# - This is used for debugging when running the workflow locally via Nektos/Act:
#     WORKFLOW_FILE=debug.yml local-workflow.sh ...
#   Specifically, it runs with detailed debugging (i.e., DEBUG_LEVEL=5).
# - This leads to the following type of invocation:
#     act --container-architecture linux/amd64 --pull="false" -P "ubuntu-latest=local/test-act" -W ./.github/workflows/debug.yml
# - Based initially on tests.yml from Python mezcla package.
# - Requires special permission for Github workflows.
# - For more information see following:
#     https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#     https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# - Based initially on version from https://github.com/LimaBD/batspp.
# - Running Github Actions with Docker: https://stackoverflow.com/a/64373702
# - Docker documentation:
#   https://docs.docker.com/engine/reference/commandline/cli/
#   https://docs.docker.com/storage/bind-mounts
#
# Warning:
# - *** Changes need to be synchronized in 3 places: Dockerfile, local-workflow.sh, and .github/workflow/*.yml!
# - The environment overrides are not working (e.g., DEBUG_LEVEL and TEST_REGEX);
#   see tests/run_tests.bash for workaround
#

name: debug-Tests

on: [push, pull_request]

jobs:
  build:
    name: Debug Build and Run Tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        ## TODO: os: [ubuntu-20.04, ubuntu-latest]
        os: [ubuntu-20.04]
        ## TODO: python-version: ["3.8", "3.9", "3.10"]
        python-version: ["3.9"]

    ## TEST:
    ## NOTE: following is for images on the hub
    ## container:
    ##   image: shell-scripts-dev
    ##   options: --user=root

    ## TEST: alternative environment spec for TEST_REGEX override
    ## See https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
    env:
      TEST_REGEX: dummy-test
 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build --tag shell-scripts-dev -f- . <Dockerfile

      - name: Configure Environment
        ## TODO2: clarify why used
        ## See https://stackoverflow.com/questions/57968497/how-do-i-set-an-env-var-with-a-bash-expression-in-github-actions
        run: |
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.9/dist-packages" >> $GITHUB_ENV

      - name: Run tests
        run: |
          # note: command format: docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
          ## OLD: docker run --env "DEBUG_LEVEL=5" --rm --mount type=bind,source="$(pwd)",target=/home/shell-scripts shell-scripts-dev
          ## TEST: docker run --rm --mount type=bind,source="$(pwd)",target=/home/shell-scripts shell-scripts-dev
          ## TODO: if [ ! -e docker.env ]; then echo "" > user-docker.env; fi
          docker run --env "DEBUG_LEVEL=5" --env-file user-docker.env --rm --mount type=bind,source="$(pwd)",target=/home/shell-scripts shell-scripts-dev
        env:
          DEBUG_LEVEL: 5
          ## TODO2: fix me!
          # Note: to test a subset of notebook, define a regex pattern
          # ex: TEST_REGEX: "(README|testing-tips)"
          ## TODO: TEST_REGEX: pattern
          DUMMY_VAR: 1
