# Basic tests for Perl scripts
# todo: add automatic test for corresponding Python ones

# calc_entropy.perl with labelled input
# TODO2: change comment char to ';' to avoid BatsPP quirks
$ echo "green:0.5 eggs:0.25 with:0.125 spam:0.125" | tr ": " $'\t\n' | calc_entropy.perl -last -verbose - | grep -v '^$'
#		class	freq	prob	-p lg(p)
#		green	0	0.500	0.500
#		eggs	0	0.250	0.500
#		spam	0	0.125	0.375
#		with	0	0.125	0.375
#		total	1	1.000	1.750
# word	classes	freq	entropy	max_prob
-	4	1	1.750	0.500

#...............................................................................

# check_errors.perl

# Make sure check_errors.perl complains about missing file:
#   $ check_errors.perl /var/log
#   /var/log
$ file=/var/log
$ log=$TMP/check_errors.log
$ check_errors.perl $file 2>&1 | grep -v $file >| $log
$ [ "0" -lt "$(wc -l < $log)" ]; echo $?

#...............................................................................

# sum_file.perl for descriptive statistics

$ sum_file.perl -stdev -extended -col=1 faithful.data
num = 272; mean = 3.488; stdev = 1.141; min = 1.600; max = 5.100; sum = 948.677
median = 4; mode = 1.867; 95th-% = 4.817; 99th-% = 5.033

$ sum_file.perl -stdev -extended -col=1 faithful.data | grep -c '95th-\% = 4.8'
1

$ sum_file.perl -stdev -extended -col=2 faithful.data
num = 272; mean = 70.897; stdev = 13.595; min = 43.000; max = 96.000; sum = 19284.000
median = 76; mode = 78; 95th-% = 89; 99th-% = 93

# TODO1 transition to the following type of example-based test
# note: pattern matching is done so that pattern is unambiguous (e.g., contains desired answer)
$ sum_file.perl -stdev -extended -col=2 faithful.data | extract_matches.perl "mode = (78)"
78
