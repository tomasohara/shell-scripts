## SETUP (OPTIONAL - USE IF REQUIRED)
## Bracketed Paste is disabled to prevent characters after output
## Example: 
## $ echo 'Hii'
## | Hi?2004l
# bind 'set enable-bracketed-paste off'

## TEST:  Make sure simple prompt used (e.g., no escapes that might contaminate output)
## PS1="$ "
## TODO: PS1="> "
## NOTE: The Jupyter bash kernel requires that PS1 not be modified as they customize it. 
$ echo $PS1
[PEXP\[\]ECT_PROMPT>

# Delete all aliases and function
# TODO: Instead start from pristine environment
$ unalias -a
$ alias | wc -l
$ for f in $(typeset -f | egrep '^\w+'); do unset -f $f; done
$ typeset -f | egrep '^\w+' | wc -l
0
0

$ alias testnum="sed -r "s/[0-9]/N/g"" 
$ alias testuser="sed -r "s/"$USER"+/userxf333/g""

$ mkdir -p tmp/test-dir-aliases

# Setting a temp directory for tests
$ TMP=/tmp/test-dir-aliases
## NOTE: Source it directly from the ./tests directory.
$ BIN_DIR=$PWD/..
## You will need to run jupyter from that directory.
## source $TEMP_BIN/_dir-aliases.bash
$ alias | wc -l
$ source _dir-aliases.bash
2

# Count aliases proper
$ alias | wc -l
10

# Count functions
$ typeset -f | egrep '^\w+' | wc -l
2

## NOTE: For reproducability, the directory name needs to be fixed
## In place of $$, use a psuedo random number (e,g., 7919)
## *** All output from one run to the next needs to be the same ***
# Test safe symbolic links
## temp_dir=$TMP/test-$$
$ temp_dir=$TMP/test-7919
$ mkdir -p "$temp_dir"
# TODO: /bin/rm -rvf "$temp_dir"
$ cd "$temp_dir"
$ pwd
/tmp/test-dir-aliases/test-7919

# Clean up temp dir
#
# NOTE: To place it safe, the directory path is reproduced here.
# IN addition, the output is omitted.
## OLD: /bin/rm -rvf "$temp_dir"/*
$ /bin/rm -rvf /tmp/test-dir-aliases/test-7919/* >| /tmp/_cleanup-test-dir-aliases.log 2>&1

## TESTING SYMBOLIC LINKS
# The first case succeed
$ touch file1
$ ln-symbolic file1 link1
# 'link1' -> 'file1'
# The second case should should fail
$ ln-symbolic file1 link1
# => "ln: failed to create symbolic link 'link1': File exists?"
# Should only be four files total (along with . and ..)
$ ls -R | wc -l
# => 3
'link1' -> 'file1'
ln: failed to create symbolic link 'link1': File exists
3

# FYI: the current aliases and functions
# ERROR IN BATSPP (WORKS FINE)
# cat $BIN_DIR/tests/_dir-aliases.bash 
## TODO: convert this to inline comments (to avoid clutter in the output)

##EXECUTING _dir-aliases.bash
$ bash $BIN_DIR/tests/_dir-aliases.bash

## Some of the aliases do not work due to the absence of 'sublinks' command
$ symlinks-proper
bash: sublinks: command not found

# SYMBOLIC LINK temp-link CREATED WHICH LINKS /tmp DIRECTORY 
$ ln-symbolic /tmp temp-link
'temp-link' -> '/tmp'

## OLD: ls -l | cut CUTS characters between x-y
$ ls -l | cut --characters=12-46 --complement
total 0
-rw-rw-r-- 
lrwxrwxrwx -> file1
lrwxrwxrwx ink -> /tmp

## CREATES A SYMBOLIC LINK FORCEFULLY
$ alias ln-symbolic-force='ln-symbolic --force'

# ln-symbolic SHOULD GENERATE AN ERROR AS PREVIOUS LINK WITH SAME NAME EXISTS
# ln: failed to create symbolic link 'temp-link': File exist
$ ln-symbolic /tmp temp-link
# ln-symbolic-force SHOULD BYPASS THE CONDITION
# ln: failed to create symbolic link 'temp-link': File exist
$ ln-symbolic-force /tmp temp-link
'temp-link/tmp' -> '/tmp'
'temp-link/tmp' -> '/tmp'

## CREATES A SAFE SYMBOLIC LINK (link-symbolic-safe='ln-symbolic --no-target-directory --no-dereference')
$ link-symbolic-safe /tmp/tmp temp-link-safe
'temp-link-safe' -> '/tmp/tmp'

## SAFE SYMBOLIC LINK BUT FORCEFUL
$ link-symbolic-safe --force /tmp/tmp temp-link-safe
'temp-link-safe' -> '/tmp/tmp'

## REVIEWING ALL THE RESULTS IN THE DIRECTORY (RESULTS ARE FILTERED)| OLD: ls -l
$ ls -l | cut --characters=12-46 --complement
total 0
-rw-rw-r-- 
lrwxrwxrwx -> file1
lrwxrwxrwx ink -> /tmp
lrwxrwxrwx ink-safe -> /tmp/tmp

#TO VIEW ALL THE SUBLINKS IN THE TESTING DIRECTORY
$ glob-links
temp-link-safe
link1
temp-link

## TO VIEW SUBDIRECTORIES IN THE TESTING DIRECTORY
$ pwd
$ mkdir test-7919-a test-7919-b
$ glob-subdirs
/tmp/test-dir-aliases/test-7919
test-7919-b
test-7919-a
