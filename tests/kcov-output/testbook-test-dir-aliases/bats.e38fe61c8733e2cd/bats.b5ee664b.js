var data = {lines:[
{"lineNum":"    1","line":"#!/usr/bin/env bash"},
{"lineNum":"    2","line":"set -e","class":"lineCov","hits":"1","order":"8","possible_hits":"0",},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"export BATS_VERSION=\'1.9.0\'","class":"lineCov","hits":"2","order":"9","possible_hits":"0",},
{"lineNum":"    5","line":"VALID_FORMATTERS=\"pretty, junit, tap, tap13\"","class":"lineCov","hits":"1","order":"10","possible_hits":"0",},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"version() {"},
{"lineNum":"    8","line":"  printf \'Bats %s\\n\' \"$BATS_VERSION\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"    9","line":"}"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"abort() {"},
{"lineNum":"   12","line":"  local print_usage=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   13","line":"  if [[ ${1:-} == --no-print-usage ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   14","line":"    print_usage=","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   15","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   16","line":"  fi"},
{"lineNum":"   17","line":"  printf \'Error: %s\\n\' \"$1\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   18","line":"  if [[ -n $print_usage ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   19","line":"    usage >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   20","line":"  fi"},
{"lineNum":"   21","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   22","line":"}"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"usage() {"},
{"lineNum":"   25","line":"  local cmd=\"${0##*/}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":"  local line","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"  cat <<HELP_TEXT_HEADER","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   29","line":"Usage: ${cmd} [OPTIONS] <tests>"},
{"lineNum":"   30","line":"       ${cmd} [-h | -v]"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"HELP_TEXT_HEADER"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"  cat <<\'HELP_TEXT_BODY\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   35","line":"  <tests> is the path to a Bats test file, or the path to a directory"},
{"lineNum":"   36","line":"  containing Bats test files (ending with \".bats\")"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"  -c, --count               Count test cases without running any tests"},
{"lineNum":"   39","line":"  --code-quote-style <style>"},
{"lineNum":"   40","line":"                            A two character string of code quote delimiters"},
{"lineNum":"   41","line":"                            or \'custom\' which requires setting $BATS_BEGIN_CODE_QUOTE and"},
{"lineNum":"   42","line":"                            $BATS_END_CODE_QUOTE. Can also be set via $BATS_CODE_QUOTE_STYLE"},
{"lineNum":"   43","line":"  --line-reference-format   Controls how file/line references e.g. in stack traces are printed:"},
{"lineNum":"   44","line":"                              - comma_line (default): a.bats, line 1"},
{"lineNum":"   45","line":"                              - colon:  a.bats:1"},
{"lineNum":"   46","line":"                              - uri: file:///tests/a.bats:1"},
{"lineNum":"   47","line":"                              - custom: provide your own via defining bats_format_file_line_reference_custom"},
{"lineNum":"   48","line":"                                        with parameters <filename> <line>, store via `printf -v \"$output\"`"},
{"lineNum":"   49","line":"  -f, --filter <regex>      Only run tests that match the regular expression"},
{"lineNum":"   50","line":"  --filter-status <status>  Only run tests with the given status in the last completed (no CTRL+C/SIGINT) run."},
{"lineNum":"   51","line":"                            Valid <status> values are:"},
{"lineNum":"   52","line":"                              failed - runs tests that failed or were not present in the last run"},
{"lineNum":"   53","line":"                              missed - runs tests that were not present in the last run"},
{"lineNum":"   54","line":"  --filter-tags <comma-separated-tag-list>"},
{"lineNum":"   55","line":"                            Only run tests that match all the tags in the list (&&)."},
{"lineNum":"   56","line":"                            You can negate a tag via prepending \'!\'."},
{"lineNum":"   57","line":"                            Specifying this flag multiple times allows for logical or (||):"},
{"lineNum":"   58","line":"                            `--filter-tags A,B --filter-tags A,!C` matches tags (A && B) || (A && !C)"},
{"lineNum":"   59","line":"  -F, --formatter <type>    Switch between formatters: pretty (default),"},
{"lineNum":"   60","line":"                              tap (default w/o term), tap13, junit, /<absolute path to formatter>"},
{"lineNum":"   61","line":"  --gather-test-outputs-in <directory>"},
{"lineNum":"   62","line":"                            Gather the output of failing *and* passing tests"},
{"lineNum":"   63","line":"                            as files in directory (if existing, must be empty)"},
{"lineNum":"   64","line":"  -h, --help                Display this help message"},
{"lineNum":"   65","line":"  -j, --jobs <jobs>         Number of parallel jobs (requires GNU parallel)"},
{"lineNum":"   66","line":"  --no-tempdir-cleanup      Preserve test output temporary directory"},
{"lineNum":"   67","line":"  --no-parallelize-across-files"},
{"lineNum":"   68","line":"                            Serialize test file execution instead of running"},
{"lineNum":"   69","line":"                            them in parallel (requires --jobs >1)"},
{"lineNum":"   70","line":"  --no-parallelize-within-files"},
{"lineNum":"   71","line":"                            Serialize test execution within files instead of"},
{"lineNum":"   72","line":"                            running them in parallel (requires --jobs >1)"},
{"lineNum":"   73","line":"  --report-formatter <type> Switch between reporters (same options as --formatter)"},
{"lineNum":"   74","line":"  -o, --output <dir>        Directory to write report files (must exist)"},
{"lineNum":"   75","line":"  -p, --pretty              Shorthand for \"--formatter pretty\""},
{"lineNum":"   76","line":"  --print-output-on-failure Automatically print the value of `$output` on failed tests"},
{"lineNum":"   77","line":"  -r, --recursive           Include tests in subdirectories"},
{"lineNum":"   78","line":"  --show-output-of-passing-tests"},
{"lineNum":"   79","line":"                            Print output of passing tests"},
{"lineNum":"   80","line":"  -t, --tap                 Shorthand for \"--formatter tap\""},
{"lineNum":"   81","line":"  -T, --timing              Add timing information to tests"},
{"lineNum":"   82","line":"  -x, --trace               Print test commands as they are executed (like `set -x`)"},
{"lineNum":"   83","line":"  --verbose-run             Make `run` print `$output` by default"},
{"lineNum":"   84","line":"  -v, --version             Display the version number"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"  For more information, see https://github.com/bats-core/bats-core"},
{"lineNum":"   87","line":"HELP_TEXT_BODY"},
{"lineNum":"   88","line":"}"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"expand_path() {"},
{"lineNum":"   91","line":"  local path=\"${1%/}\"","class":"lineCov","hits":"1","order":"71","possible_hits":"0",},
{"lineNum":"   92","line":"  local dirname=\"${path%/*}\"","class":"lineCov","hits":"1","order":"72","possible_hits":"0",},
{"lineNum":"   93","line":"  if [[ -z \"$dirname\" ]]; then","class":"lineCov","hits":"1","order":"73","possible_hits":"0",},
{"lineNum":"   94","line":"    dirname=/","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   95","line":"  fi"},
{"lineNum":"   96","line":"  local result=\"$2\"","class":"lineCov","hits":"1","order":"74","possible_hits":"0",},
{"lineNum":"   97","line":"  local OLDPWD=\"$PWD\"","class":"lineCov","hits":"1","order":"75","possible_hits":"0",},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"  if [[ \"$dirname\" == \"$path\" ]]; then","class":"lineCov","hits":"1","order":"76","possible_hits":"0",},
{"lineNum":"  100","line":"    dirname=\"$PWD\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  101","line":"  else"},
{"lineNum":"  102","line":"    cd \"$dirname\"","class":"lineCov","hits":"1","order":"77","possible_hits":"0",},
{"lineNum":"  103","line":"    dirname=\"$PWD\"","class":"lineCov","hits":"1","order":"78","possible_hits":"0",},
{"lineNum":"  104","line":"    cd \"$OLDPWD\"","class":"lineCov","hits":"1","order":"79","possible_hits":"0",},
{"lineNum":"  105","line":"  fi"},
{"lineNum":"  106","line":"  printf -v \"$result\" \'%s/%s\' \"$dirname\" \"${path##*/}\"","class":"lineCov","hits":"1","order":"80","possible_hits":"0",},
{"lineNum":"  107","line":"}"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"BATS_LIBEXEC=\"$("},
{"lineNum":"  110","line":"  cd \"$(dirname \"$(bats_readlinkf \"${BASH_SOURCE[0]}\")\")\""},
{"lineNum":"  111","line":"  pwd"},
{"lineNum":"  112","line":")\"","class":"lineCov","hits":"1","order":"13","possible_hits":"0",},
{"lineNum":"  113","line":"export BATS_LIBEXEC","class":"lineCov","hits":"4","order":"11","possible_hits":"0",},
{"lineNum":"  114","line":"export BATS_CWD=\"$PWD\"","class":"lineCov","hits":"3","order":"12","possible_hits":"0",},
{"lineNum":"  115","line":"export BATS_TEST_FILTER=","class":"lineCov","hits":"2","order":"14","possible_hits":"0",},
{"lineNum":"  116","line":"export PATH=\"$BATS_LIBEXEC:$PATH\"","class":"lineCov","hits":"2","order":"15","possible_hits":"0",},
{"lineNum":"  117","line":"export BATS_ROOT_PID=$$","class":"lineCov","hits":"2","order":"16","possible_hits":"0",},
{"lineNum":"  118","line":"export BATS_TMPDIR=\"${TMPDIR:-/tmp}\"","class":"lineCov","hits":"2","order":"17","possible_hits":"0",},
{"lineNum":"  119","line":"BATS_TMPDIR=${BATS_TMPDIR%/} # chop off trailing / to avoid duplication","class":"lineCov","hits":"1","order":"18","possible_hits":"0",},
{"lineNum":"  120","line":"export BATS_RUN_TMPDIR=","class":"lineCov","hits":"2","order":"19","possible_hits":"0",},
{"lineNum":"  121","line":"export BATS_GUARANTEED_MINIMUM_VERSION=0.0.0","class":"lineCov","hits":"2","order":"20","possible_hits":"0",},
{"lineNum":"  122","line":"export BATS_LIB_PATH=${BATS_LIB_PATH-/usr/lib/bats}","class":"lineCov","hits":"2","order":"21","possible_hits":"0",},
{"lineNum":"  123","line":"BATS_REPORT_OUTPUT_DIR=${BATS_REPORT_OUTPUT_DIR-.}","class":"lineCov","hits":"1","order":"22","possible_hits":"0",},
{"lineNum":"  124","line":"export BATS_LINE_REFERENCE_FORMAT=${BATS_LINE_REFERENCE_FORMAT-comma_line}","class":"lineCov","hits":"2","order":"23","possible_hits":"0",},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"if [[ ! -d \"${BATS_TMPDIR}\" ]]; then","class":"lineCov","hits":"1","order":"24","possible_hits":"0",},
{"lineNum":"  127","line":"  printf \"Error: BATS_TMPDIR (%s) does not exist or is not a directory\" \"${BATS_TMPDIR}\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  128","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  129","line":"elif [[ ! -w \"${BATS_TMPDIR}\" ]]; then","class":"lineCov","hits":"1","order":"25","possible_hits":"0",},
{"lineNum":"  130","line":"  printf \"Error: BATS_TMPDIR (%s) is not writable\" \"${BATS_TMPDIR}\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  131","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  132","line":"fi"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"arguments=()"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"# Unpack single-character options bundled together, e.g. -cr, -pr."},
{"lineNum":"  137","line":"for arg in \"$@\"; do","class":"lineCov","hits":"1","order":"26","possible_hits":"0",},
{"lineNum":"  138","line":"  if [[ \"$arg\" =~ ^-[^-]. ]]; then","class":"lineCov","hits":"1","order":"27","possible_hits":"0",},
{"lineNum":"  139","line":"    index=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  140","line":"    while option=\"${arg:$((index++)):1}\"; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  141","line":"      if [[ -z \"$option\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  142","line":"        break","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  143","line":"      fi"},
{"lineNum":"  144","line":"      arguments+=(\"-$option\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  145","line":"    done"},
{"lineNum":"  146","line":"  else"},
{"lineNum":"  147","line":"    arguments+=(\"$arg\")","class":"lineCov","hits":"1","order":"28","possible_hits":"0",},
{"lineNum":"  148","line":"  fi"},
{"lineNum":"  149","line":"  shift","class":"lineCov","hits":"1","order":"29","possible_hits":"0",},
{"lineNum":"  150","line":"done"},
{"lineNum":"  151","line":""},
{"lineNum":"  152","line":"set -- \"${arguments[@]}\"","class":"lineCov","hits":"1","order":"30","possible_hits":"0",},
{"lineNum":"  153","line":"arguments=()"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"unset flags recursive formatter_flags","class":"lineCov","hits":"1","order":"31","possible_hits":"0",},
{"lineNum":"  156","line":"flags=(\'--dummy-flag\')           # add a dummy flag to prevent unset variable errors on empty array expansion in old bash versions","class":"lineCov","hits":"1","order":"32","possible_hits":"0",},
{"lineNum":"  157","line":"formatter_flags=(\'--dummy-flag\') # add a dummy flag to prevent unset variable errors on empty array expansion in old bash versions","class":"lineCov","hits":"1","order":"33","possible_hits":"0",},
{"lineNum":"  158","line":"formatter=${BATS_FORMATTER:-\'tap\'}","class":"lineCov","hits":"1","order":"34","possible_hits":"0",},
{"lineNum":"  159","line":"report_formatter=\'\'","class":"lineCov","hits":"1","order":"35","possible_hits":"0",},
{"lineNum":"  160","line":"recursive=","class":"lineCov","hits":"1","order":"36","possible_hits":"0",},
{"lineNum":"  161","line":"setup_suite_file=\'\'","class":"lineCov","hits":"1","order":"37","possible_hits":"0",},
{"lineNum":"  162","line":"export BATS_TEMPDIR_CLEANUP=1","class":"lineCov","hits":"2","order":"38","possible_hits":"0",},
{"lineNum":"  163","line":"if [[ -z \"${CI:-}\" && -t 0 && -t 1 ]] && command -v tput >/dev/null; then","class":"lineCov","hits":"3","order":"39","possible_hits":"0",},
{"lineNum":"  164","line":"  formatter=\'pretty\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  165","line":"fi"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"while [[ \"$#\" -ne 0 ]]; do","class":"lineCov","hits":"2","order":"40","possible_hits":"0",},
{"lineNum":"  168","line":"  case \"$1\" in","class":"lineCov","hits":"1","order":"41","possible_hits":"0",},
{"lineNum":"  169","line":"  -h | --help)"},
{"lineNum":"  170","line":"    version","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  171","line":"    usage","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  172","line":"    exit 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  173","line":"    ;;"},
{"lineNum":"  174","line":"  -v | --version)"},
{"lineNum":"  175","line":"    version","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  176","line":"    exit 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  177","line":"    ;;"},
{"lineNum":"  178","line":"  -c | --count)"},
{"lineNum":"  179","line":"    flags+=(\'-c\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  180","line":"    ;;"},
{"lineNum":"  181","line":"  -f | --filter)"},
{"lineNum":"  182","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  183","line":"    flags+=(\'-f\' \"$1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  184","line":"    ;;"},
{"lineNum":"  185","line":"  -F | --formatter)"},
{"lineNum":"  186","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  187","line":"    # allow cat formatter to see extended output but don\'t advertise to users"},
{"lineNum":"  188","line":"    if [[ $1 =~ ^(pretty|junit|tap|tap13|cat|/.*)$ ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  189","line":"      formatter=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  190","line":"    else"},
{"lineNum":"  191","line":"      printf \"Unknown formatter \'%s\', valid options are %s\\n\" \"$1\" \"${VALID_FORMATTERS}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  192","line":"      exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  193","line":"    fi"},
{"lineNum":"  194","line":"    ;;"},
{"lineNum":"  195","line":"  --report-formatter)"},
{"lineNum":"  196","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  197","line":"    if [[ $1 =~ ^(cat|pretty|junit|tap|tap13|/.*)$ ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  198","line":"      report_formatter=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  199","line":"    else"},
{"lineNum":"  200","line":"      printf \"Unknown report formatter \'%s\', valid options are %s\\n\" \"$1\" \"${VALID_FORMATTERS}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  201","line":"      exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  202","line":"    fi"},
{"lineNum":"  203","line":"    ;;"},
{"lineNum":"  204","line":"  -o | --output)"},
{"lineNum":"  205","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  206","line":"    BATS_REPORT_OUTPUT_DIR=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  207","line":"    ;;"},
{"lineNum":"  208","line":"  -p | --pretty)"},
{"lineNum":"  209","line":"    formatter=\'pretty\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  210","line":"    ;;"},
{"lineNum":"  211","line":"  -j | --jobs)"},
{"lineNum":"  212","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  213","line":"    flags+=(\'-j\' \"$1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  214","line":"    ;;"},
{"lineNum":"  215","line":"  -r | --recursive)"},
{"lineNum":"  216","line":"    recursive=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  217","line":"    ;;"},
{"lineNum":"  218","line":"  -t | --tap)"},
{"lineNum":"  219","line":"    formatter=\'tap\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  220","line":"    ;;"},
{"lineNum":"  221","line":"  -T | --timing)"},
{"lineNum":"  222","line":"    flags+=(\'-T\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  223","line":"    formatter_flags+=(\'-T\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  224","line":"    ;;"},
{"lineNum":"  225","line":"  # this flag is now a no-op, as it is the parallel default"},
{"lineNum":"  226","line":"  --parallel-preserve-environment) ;;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"  --no-parallelize-across-files)"},
{"lineNum":"  229","line":"    flags+=(\"--no-parallelize-across-files\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  230","line":"    ;;"},
{"lineNum":"  231","line":"  --no-parallelize-within-files)"},
{"lineNum":"  232","line":"    flags+=(\"--no-parallelize-within-files\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  233","line":"    ;;"},
{"lineNum":"  234","line":"  --no-tempdir-cleanup)"},
{"lineNum":"  235","line":"    BATS_TEMPDIR_CLEANUP=\'\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  236","line":"    ;;"},
{"lineNum":"  237","line":"  --tempdir) # for internal test consumption only!","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  238","line":"    BATS_RUN_TMPDIR=\"$2\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  239","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  240","line":"    ;;"},
{"lineNum":"  241","line":"  -x | --trace)"},
{"lineNum":"  242","line":"    flags+=(--trace)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  243","line":"    ;;"},
{"lineNum":"  244","line":"  --print-output-on-failure)"},
{"lineNum":"  245","line":"    flags+=(--print-output-on-failure)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  246","line":"    ;;"},
{"lineNum":"  247","line":"  --show-output-of-passing-tests)"},
{"lineNum":"  248","line":"    flags+=(--show-output-of-passing-tests)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  249","line":"    ;;"},
{"lineNum":"  250","line":"  --verbose-run)"},
{"lineNum":"  251","line":"    flags+=(--verbose-run)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  252","line":"    ;;"},
{"lineNum":"  253","line":"  --gather-test-outputs-in)"},
{"lineNum":"  254","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  255","line":"    output_dir=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  256","line":"    if [ -d \"$output_dir\" ]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  257","line":"      if ! find \"$output_dir\" -mindepth 1 -exec false {} + 2>/dev/null; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  258","line":"        abort --no-print-usage \"Directory \'$output_dir\' must be empty for --gather-test-outputs-in\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  259","line":"      fi"},
{"lineNum":"  260","line":"    elif ! mkdir \"$output_dir\" 2>/dev/null; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  261","line":"      abort --no-print-usage \"Could not create \'$output_dir\' for --gather-test-outputs-in\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  262","line":"    fi"},
{"lineNum":"  263","line":"    flags+=(--gather-test-outputs-in \"$output_dir\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  264","line":"    ;;"},
{"lineNum":"  265","line":"  --setup-suite-file)"},
{"lineNum":"  266","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  267","line":"    setup_suite_file=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  268","line":"    ;;"},
{"lineNum":"  269","line":"  --code-quote-style)"},
{"lineNum":"  270","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  271","line":"    BATS_CODE_QUOTE_STYLE=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  272","line":"    ;;"},
{"lineNum":"  273","line":"  --filter-status)"},
{"lineNum":"  274","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  275","line":"    flags+=(\'--filter-status\' \"$1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  276","line":"    ;;"},
{"lineNum":"  277","line":"  --filter-tags)"},
{"lineNum":"  278","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  279","line":"    flags+=(\'--filter-tags\' \"$1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  280","line":"    ;;"},
{"lineNum":"  281","line":"  --line-reference-format)"},
{"lineNum":"  282","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  283","line":"    BATS_LINE_REFERENCE_FORMAT=$1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  284","line":"    ;;"},
{"lineNum":"  285","line":"  -*)"},
{"lineNum":"  286","line":"    abort \"Bad command line option \'$1\'\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  287","line":"    ;;"},
{"lineNum":"  288","line":"  *)"},
{"lineNum":"  289","line":"    arguments+=(\"$1\")","class":"lineCov","hits":"1","order":"42","possible_hits":"0",},
{"lineNum":"  290","line":"    ;;"},
{"lineNum":"  291","line":"  esac"},
{"lineNum":"  292","line":"  shift","class":"lineCov","hits":"1","order":"43","possible_hits":"0",},
{"lineNum":"  293","line":"done"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"if [[ ! $BATS_LINE_REFERENCE_FORMAT =~ (custom|comma_line|colon|uri) ]]; then","class":"lineCov","hits":"1","order":"44","possible_hits":"0",},
{"lineNum":"  296","line":"  abort \"Invalid BATS_LINE_REFERENCE_FORMAT \'$BATS_LINE_REFERENCE_FORMAT\' (e.g. via --line-reference-format)\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  297","line":"fi"},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"if [[ -n \"${BATS_RUN_TMPDIR:-}\" ]]; then","class":"lineCov","hits":"1","order":"45","possible_hits":"0",},
{"lineNum":"  300","line":"  if [[ -d \"$BATS_RUN_TMPDIR\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  301","line":"    printf \"Error: BATS_RUN_TMPDIR (%s) already exists\\n\" \"$BATS_RUN_TMPDIR\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  302","line":"    printf \"Reusing old run directories can lead to unexpected results ... aborting!\\n\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  303","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  304","line":"  elif ! mkdir -p \"$BATS_RUN_TMPDIR\"; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  305","line":"    printf \"Error: Failed to create BATS_RUN_TMPDIR (%s)\\n\" \"$BATS_RUN_TMPDIR\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  306","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  307","line":"  fi"},
{"lineNum":"  308","line":"elif ! BATS_RUN_TMPDIR=$(mktemp -d \"${BATS_TMPDIR}/bats-run-XXXXXX\"); then","class":"lineCov","hits":"2","order":"46","possible_hits":"0",},
{"lineNum":"  309","line":"  printf \"Error: Failed to create BATS_RUN_TMPDIR (%s) with mktemp\\n\" \"${BATS_TMPDIR}/bats-run-XXXXXX\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  310","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  311","line":"fi"},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"export BATS_WARNING_FILE=\"${BATS_RUN_TMPDIR}/warnings.log\"","class":"lineCov","hits":"2","order":"47","possible_hits":"0",},
{"lineNum":"  314","line":""},
{"lineNum":"  315","line":"bats_exit_trap() {"},
{"lineNum":"  316","line":"  if [[ -s \"$BATS_WARNING_FILE\" ]]; then","class":"lineCov","hits":"1","order":"881","possible_hits":"0",},
{"lineNum":"  317","line":"    local pre_cat=\'\' post_cat=\'\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  318","line":"    if [[ $formatter == pretty ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  319","line":"      pre_cat=$\'\\x1B[31m\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  320","line":"      post_cat=$\'\\x1B[0m\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  321","line":"    fi"},
{"lineNum":"  322","line":"    printf \"\\nThe following warnings were encountered during tests:\\n%s\" \"$pre_cat\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  323","line":"    cat \"$BATS_WARNING_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  324","line":"    printf \"%s\" \"$post_cat\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  325","line":"  fi >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  326","line":""},
{"lineNum":"  327","line":"  if [[ -n \"$BATS_TEMPDIR_CLEANUP\" ]]; then","class":"lineCov","hits":"1","order":"882","possible_hits":"0",},
{"lineNum":"  328","line":"    rm -rf \"$BATS_RUN_TMPDIR\"","class":"lineCov","hits":"1","order":"883","possible_hits":"0",},
{"lineNum":"  329","line":"  else"},
{"lineNum":"  330","line":"    printf \"BATS_RUN_TMPDIR: %s\\n\" \"$BATS_RUN_TMPDIR\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  331","line":"  fi"},
{"lineNum":"  332","line":"}"},
{"lineNum":"  333","line":""},
{"lineNum":"  334","line":"trap bats_exit_trap EXIT","class":"lineCov","hits":"1","order":"48","possible_hits":"0",},
{"lineNum":"  335","line":""},
{"lineNum":"  336","line":"if [[ \"$formatter\" != \"tap\" ]]; then","class":"lineCov","hits":"1","order":"49","possible_hits":"0",},
{"lineNum":"  337","line":"  flags+=(\'-x\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  338","line":"fi"},
{"lineNum":"  339","line":""},
{"lineNum":"  340","line":"if [[ -n \"$report_formatter\" && \"$report_formatter\" != \"tap\" ]]; then","class":"lineCov","hits":"1","order":"50","possible_hits":"0",},
{"lineNum":"  341","line":"  flags+=(\'-x\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  342","line":"fi"},
{"lineNum":"  343","line":""},
{"lineNum":"  344","line":"if [[ \"$formatter\" == \"junit\" ]]; then","class":"lineCov","hits":"1","order":"51","possible_hits":"0",},
{"lineNum":"  345","line":"  flags+=(\'-T\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  346","line":"  formatter_flags+=(\'--base-path\' \"${arguments[0]}\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  347","line":"fi"},
{"lineNum":"  348","line":"if [[ \"$report_formatter\" == \"junit\" ]]; then","class":"lineCov","hits":"1","order":"52","possible_hits":"0",},
{"lineNum":"  349","line":"  flags+=(\'-T\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  350","line":"  report_formatter_flags+=(\'--base-path\' \"${arguments[0]}\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  351","line":"fi"},
{"lineNum":"  352","line":""},
{"lineNum":"  353","line":"if [[ \"$formatter\" == \"pretty\" ]]; then","class":"lineCov","hits":"1","order":"53","possible_hits":"0",},
{"lineNum":"  354","line":"  formatter_flags+=(\'--base-path\' \"${arguments[0]}\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  355","line":"fi"},
{"lineNum":"  356","line":""},
{"lineNum":"  357","line":"# if we don\'t need to filter extended syntax, use the faster formatter"},
{"lineNum":"  358","line":"if [[ \"$formatter\" == tap && -z \"$report_formatter\" ]]; then","class":"lineCov","hits":"2","order":"54","possible_hits":"0",},
{"lineNum":"  359","line":"  formatter=\"cat\"","class":"lineCov","hits":"1","order":"55","possible_hits":"0",},
{"lineNum":"  360","line":"fi"},
{"lineNum":"  361","line":""},
{"lineNum":"  362","line":"bats_check_formatter() { # <formatter-path>"},
{"lineNum":"  363","line":"  local -r formatter=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  364","line":"  if [[ ! -f \"$formatter\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  365","line":"    printf \"ERROR: Formatter \'%s\' is not readable!\\n\" \"$formatter\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  366","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  367","line":"  elif [[ ! -x \"$formatter\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  368","line":"    printf \"ERROR: Formatter \'%s\' is not executable!\\n\" \"$formatter\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  369","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  370","line":"  fi"},
{"lineNum":"  371","line":"}"},
{"lineNum":"  372","line":""},
{"lineNum":"  373","line":"if [[ $formatter == /* ]]; then # absolute paths are direct references to formatters","class":"lineCov","hits":"1","order":"56","possible_hits":"0",},
{"lineNum":"  374","line":"  bats_check_formatter \"$formatter\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  375","line":"  interpolated_formatter=\"$formatter\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  376","line":"else"},
{"lineNum":"  377","line":"  interpolated_formatter=\"bats-format-${formatter}\"","class":"lineCov","hits":"1","order":"57","possible_hits":"0",},
{"lineNum":"  378","line":"fi"},
{"lineNum":"  379","line":""},
{"lineNum":"  380","line":"if [[ \"${#arguments[@]}\" -eq 0 ]]; then","class":"lineCov","hits":"1","order":"58","possible_hits":"0",},
{"lineNum":"  381","line":"  abort \'Must specify at least one <test>\'","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  382","line":"fi"},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"if [[ -n \"$report_formatter\" ]]; then","class":"lineCov","hits":"1","order":"59","possible_hits":"0",},
{"lineNum":"  385","line":"  if [[ ! -w \"${BATS_REPORT_OUTPUT_DIR}\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  386","line":"    abort \"Output path ${BATS_REPORT_OUTPUT_DIR} is not writeable\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  387","line":"  fi"},
{"lineNum":"  388","line":"  # only set BATS_REPORT_FILENAME if none was given"},
{"lineNum":"  389","line":"  if [[ -z \"${BATS_REPORT_FILENAME:-}\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  390","line":"    case \"$report_formatter\" in","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  391","line":"    tap | tap13)"},
{"lineNum":"  392","line":"      BATS_REPORT_FILENAME=\"report.tap\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  393","line":"      ;;"},
{"lineNum":"  394","line":"    junit)"},
{"lineNum":"  395","line":"      BATS_REPORT_FILENAME=\"report.xml\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  396","line":"      ;;"},
{"lineNum":"  397","line":"    *)"},
{"lineNum":"  398","line":"      BATS_REPORT_FILENAME=\"report.log\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  399","line":"      ;;"},
{"lineNum":"  400","line":"    esac"},
{"lineNum":"  401","line":"  fi"},
{"lineNum":"  402","line":"fi"},
{"lineNum":"  403","line":""},
{"lineNum":"  404","line":"if [[ $report_formatter == /* ]]; then # absolute paths are direct references to formatters","class":"lineCov","hits":"1","order":"60","possible_hits":"0",},
{"lineNum":"  405","line":"  bats_check_formatter \"$report_formatter\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  406","line":"  interpolated_report_formatter=\"${report_formatter}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  407","line":"else"},
{"lineNum":"  408","line":"  interpolated_report_formatter=\"bats-format-${report_formatter}\"","class":"lineCov","hits":"1","order":"61","possible_hits":"0",},
{"lineNum":"  409","line":"fi"},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"if [[ \"${BATS_CODE_QUOTE_STYLE-BATS_CODE_QUOTE_STYLE_UNSET}\" == BATS_CODE_QUOTE_STYLE_UNSET ]]; then","class":"lineCov","hits":"1","order":"62","possible_hits":"0",},
{"lineNum":"  412","line":"  BATS_CODE_QUOTE_STYLE=\"\\`\'\"","class":"lineCov","hits":"1","order":"63","possible_hits":"0",},
{"lineNum":"  413","line":"fi"},
{"lineNum":"  414","line":""},
{"lineNum":"  415","line":"case \"${BATS_CODE_QUOTE_STYLE}\" in","class":"lineCov","hits":"1","order":"64","possible_hits":"0",},
{"lineNum":"  416","line":"??)"},
{"lineNum":"  417","line":"  BATS_BEGIN_CODE_QUOTE=\"${BATS_CODE_QUOTE_STYLE::1}\"","class":"lineCov","hits":"1","order":"65","possible_hits":"0",},
{"lineNum":"  418","line":"  BATS_END_CODE_QUOTE=\"${BATS_CODE_QUOTE_STYLE:1:1}\"","class":"lineCov","hits":"1","order":"66","possible_hits":"0",},
{"lineNum":"  419","line":"  export BATS_BEGIN_CODE_QUOTE BATS_END_CODE_QUOTE","class":"lineCov","hits":"1","order":"67","possible_hits":"0",},
{"lineNum":"  420","line":"  ;;"},
{"lineNum":"  421","line":"custom)"},
{"lineNum":"  422","line":"  if [[ ${BATS_BEGIN_CODE_QUOTE-BATS_BEGIN_CODE_QUOTE_UNSET} == BATS_BEGIN_CODE_QUOTE_UNSET ||","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  423","line":"    ${BATS_END_CODE_QUOTE-BATS_BEGIN_CODE_QUOTE_UNSET} == BATS_BEGIN_CODE_QUOTE_UNSET ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  424","line":"    printf \"ERROR: BATS_CODE_QUOTE_STYLE=custom requires BATS_BEGIN_CODE_QUOTE and BATS_END_CODE_QUOTE to be set\\n\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  425","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  426","line":"  fi"},
{"lineNum":"  427","line":"  ;;"},
{"lineNum":"  428","line":"*)"},
{"lineNum":"  429","line":"  printf \"ERROR: Unknown BATS_CODE_QUOTE_STYLE: %s\\n\" \"$BATS_CODE_QUOTE_STYLE\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  430","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  431","line":"  ;;"},
{"lineNum":"  432","line":"esac"},
{"lineNum":"  433","line":""},
{"lineNum":"  434","line":"if [[ -n \"$setup_suite_file\" && ! -f \"$setup_suite_file\" ]]; then","class":"lineCov","hits":"1","order":"68","possible_hits":"0",},
{"lineNum":"  435","line":"  abort \"--setup-suite-file $setup_suite_file does not exist!\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  436","line":"fi"},
{"lineNum":"  437","line":""},
{"lineNum":"  438","line":"filenames=()"},
{"lineNum":"  439","line":"for filename in \"${arguments[@]}\"; do","class":"lineCov","hits":"1","order":"69","possible_hits":"0",},
{"lineNum":"  440","line":"  expand_path \"$filename\" \'filename\'","class":"lineCov","hits":"1","order":"70","possible_hits":"0",},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"  if [[ -z \"$setup_suite_file\" ]]; then","class":"lineCov","hits":"1","order":"81","possible_hits":"0",},
{"lineNum":"  443","line":"    if [[ -d \"$filename\" ]]; then","class":"lineCov","hits":"1","order":"82","possible_hits":"0",},
{"lineNum":"  444","line":"      dirname=\"$filename\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  445","line":"    else"},
{"lineNum":"  446","line":"      dirname=\"${filename%/*}\"","class":"lineCov","hits":"1","order":"83","possible_hits":"0",},
{"lineNum":"  447","line":"    fi"},
{"lineNum":"  448","line":"    potential_setup_suite_file=\"$dirname/setup_suite.bash\"","class":"lineCov","hits":"1","order":"84","possible_hits":"0",},
{"lineNum":"  449","line":"    if [[ -e \"$potential_setup_suite_file\" ]]; then","class":"lineCov","hits":"1","order":"85","possible_hits":"0",},
{"lineNum":"  450","line":"      setup_suite_file=\"$potential_setup_suite_file\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  451","line":"    fi"},
{"lineNum":"  452","line":"  fi"},
{"lineNum":"  453","line":""},
{"lineNum":"  454","line":"  if [[ -d \"$filename\" ]]; then","class":"lineCov","hits":"1","order":"86","possible_hits":"0",},
{"lineNum":"  455","line":"    shopt -s nullglob","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  456","line":"    if [[ \"$recursive\" -eq 1 ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  457","line":"      while IFS= read -r -d $\'\\0\' file; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  458","line":"        filenames+=(\"$file\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  459","line":"      done < <(find -L \"$filename\" -type f -name \"*.${BATS_FILE_EXTENSION:-bats}\" -print0 | sort -z)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  460","line":"    else"},
{"lineNum":"  461","line":"      for suite_filename in \"$filename\"/*.\"${BATS_FILE_EXTENSION:-bats}\"; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  462","line":"        filenames+=(\"$suite_filename\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  463","line":"      done"},
{"lineNum":"  464","line":"    fi"},
{"lineNum":"  465","line":"    shopt -u nullglob","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  466","line":"  else"},
{"lineNum":"  467","line":"    filenames+=(\"$filename\")","class":"lineCov","hits":"1","order":"87","possible_hits":"0",},
{"lineNum":"  468","line":"  fi"},
{"lineNum":"  469","line":"done"},
{"lineNum":"  470","line":""},
{"lineNum":"  471","line":"if [[ -n \"$setup_suite_file\" ]]; then","class":"lineCov","hits":"1","order":"88","possible_hits":"0",},
{"lineNum":"  472","line":"  flags+=(\"--setup-suite-file\" \"$setup_suite_file\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  473","line":"fi"},
{"lineNum":"  474","line":""},
{"lineNum":"  475","line":"# shellcheck source=lib/bats-core/validator.bash"},
{"lineNum":"  476","line":"source \"$BATS_ROOT/lib/bats-core/validator.bash\"","class":"lineCov","hits":"1","order":"89","possible_hits":"0",},
{"lineNum":"  477","line":""},
{"lineNum":"  478","line":"trap \'BATS_INTERRUPTED=true\' INT # let the lower levels handle the interruption","class":"lineCov","hits":"1","order":"90","possible_hits":"0",},
{"lineNum":"  479","line":""},
{"lineNum":"  480","line":"set -o pipefail execfail","class":"lineCov","hits":"1","order":"91","possible_hits":"0",},
{"lineNum":"  481","line":""},
{"lineNum":"  482","line":"# pipe stdin into command and to stdout"},
{"lineNum":"  483","line":"# pipe command stdout to file"},
{"lineNum":"  484","line":"bats_tee() { # <output-file> <command...>"},
{"lineNum":"  485","line":"  local output_file=$1 status=0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  486","line":"  shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  487","line":"  exec 3<&1 # use FD3 to get around pipe","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  488","line":"  tee >(cat >&3) | \"$@\" >\"$output_file\" || status=$?","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  489","line":"  if (( status != 0 )); then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  490","line":"    printf \"ERROR: command \\`%s\\` failed with status %d\\n\" \"$*\" \"$status\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  491","line":"  fi"},
{"lineNum":"  492","line":"  return $status","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  493","line":"}"},
{"lineNum":"  494","line":""},
{"lineNum":"  495","line":"if [[ -n \"$report_formatter\" ]]; then","class":"lineCov","hits":"1","order":"92","possible_hits":"0",},
{"lineNum":"  496","line":"  exec bats-exec-suite \"${flags[@]}\" \"${filenames[@]}\" |","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  497","line":"    bats_tee \"${BATS_REPORT_OUTPUT_DIR}/${BATS_REPORT_FILENAME}\" \"$interpolated_report_formatter\" \"${report_formatter_flags[@]}\" |","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  498","line":"    bats_test_count_validator |","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  499","line":"    \"$interpolated_formatter\" \"${formatter_flags[@]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  500","line":"else"},
{"lineNum":"  501","line":"  exec bats-exec-suite \"${flags[@]}\" \"${filenames[@]}\" |","class":"lineCov","hits":"1","order":"93","possible_hits":"0",},
{"lineNum":"  502","line":"    bats_test_count_validator |","class":"lineCov","hits":"1","order":"94","possible_hits":"0",},
{"lineNum":"  503","line":"    \"$interpolated_formatter\" \"${formatter_flags[@]}\"","class":"lineCov","hits":"1","order":"110","possible_hits":"0",},
{"lineNum":"  504","line":"fi"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "bats", "date" : "2023-06-15 21:55:23", "instrumented" : 247, "covered" : 91,};
var merged_data = [];
