var data = {lines:[
{"lineNum":"    1","line":"#!/usr/bin/env bash"},
{"lineNum":"    2","line":"set -e","class":"lineCov","hits":"1","order":"98","possible_hits":"0",},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"count_only_flag=\'\'","class":"lineCov","hits":"1","order":"99","possible_hits":"0",},
{"lineNum":"    5","line":"filter=\'\'","class":"lineCov","hits":"1","order":"100","possible_hits":"0",},
{"lineNum":"    6","line":"num_jobs=${BATS_NUMBER_OF_PARALLEL_JOBS:-1}","class":"lineCov","hits":"1","order":"101","possible_hits":"0",},
{"lineNum":"    7","line":"bats_no_parallelize_across_files=${BATS_NO_PARALLELIZE_ACROSS_FILES-}","class":"lineCov","hits":"1","order":"102","possible_hits":"0",},
{"lineNum":"    8","line":"bats_no_parallelize_within_files=","class":"lineCov","hits":"1","order":"103","possible_hits":"0",},
{"lineNum":"    9","line":"filter_status=\'\'","class":"lineCov","hits":"1","order":"104","possible_hits":"0",},
{"lineNum":"   10","line":"filter_tags_list=()"},
{"lineNum":"   11","line":"flags=(\'--dummy-flag\') # add a dummy flag to prevent unset variable errors on empty array expansion in old bash versions","class":"lineCov","hits":"1","order":"105","possible_hits":"0",},
{"lineNum":"   12","line":"setup_suite_file=\'\'","class":"lineCov","hits":"1","order":"106","possible_hits":"0",},
{"lineNum":"   13","line":"BATS_TRACE_LEVEL=\"${BATS_TRACE_LEVEL:-0}\"","class":"lineCov","hits":"1","order":"107","possible_hits":"0",},
{"lineNum":"   14","line":"BATS_SHOW_OUTPUT_OF_SUCCEEDING_TESTS=","class":"lineCov","hits":"1","order":"108","possible_hits":"0",},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"abort() {"},
{"lineNum":"   17","line":"  printf \'Error: %s\\n\' \"$1\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   18","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   19","line":"}"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"# shellcheck source=lib/bats-core/common.bash disable=SC2153"},
{"lineNum":"   22","line":"source \"$BATS_ROOT/lib/bats-core/common.bash\"","class":"lineCov","hits":"1","order":"109","possible_hits":"0",},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"while [[ \"$#\" -ne 0 ]]; do","class":"lineCov","hits":"2","order":"111","possible_hits":"0",},
{"lineNum":"   25","line":"  case \"$1\" in","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   26","line":"  -c)"},
{"lineNum":"   27","line":"    count_only_flag=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   28","line":"    ;;"},
{"lineNum":"   29","line":"  -f)"},
{"lineNum":"   30","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   31","line":"    filter=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   32","line":"    ;;"},
{"lineNum":"   33","line":"  -j)"},
{"lineNum":"   34","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   35","line":"    num_jobs=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   36","line":"    flags+=(\'-j\' \"$num_jobs\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   37","line":"    ;;"},
{"lineNum":"   38","line":"  -T)"},
{"lineNum":"   39","line":"    flags+=(\'-T\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   40","line":"    ;;"},
{"lineNum":"   41","line":"  -x)"},
{"lineNum":"   42","line":"    flags+=(\'-x\')","class":"lineCov","hits":"2","order":"112","possible_hits":"0",},
{"lineNum":"   43","line":"    ;;"},
{"lineNum":"   44","line":"  --no-parallelize-across-files)"},
{"lineNum":"   45","line":"    bats_no_parallelize_across_files=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   46","line":"    ;;"},
{"lineNum":"   47","line":"  --no-parallelize-within-files)"},
{"lineNum":"   48","line":"    bats_no_parallelize_within_files=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   49","line":"    flags+=(\"--no-parallelize-within-files\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   50","line":"    ;;"},
{"lineNum":"   51","line":"  --filter-status)"},
{"lineNum":"   52","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   53","line":"    filter_status=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   54","line":"    ;;"},
{"lineNum":"   55","line":"  --filter-tags)"},
{"lineNum":"   56","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   57","line":"    IFS=, read -ra tags <<<\"$1\" || true","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   58","line":"    if ((${#tags[@]} > 0)); then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   59","line":"      for ((i = 0; i < ${#tags[@]}; ++i)); do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   60","line":"        bats_trim \"tags[$i]\" \"${tags[$i]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   61","line":"      done"},
{"lineNum":"   62","line":"      bats_sort sorted_tags \"${tags[@]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   63","line":"      IFS=, filter_tags_list+=(\"${sorted_tags[*]}\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   64","line":"    else"},
{"lineNum":"   65","line":"      filter_tags_list+=(\"\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   66","line":"    fi"},
{"lineNum":"   67","line":"    ;;"},
{"lineNum":"   68","line":"  --dummy-flag) ;;","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"  --trace)"},
{"lineNum":"   71","line":"    flags+=(\'--trace\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   72","line":"    ((++BATS_TRACE_LEVEL)) # avoid returning 0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   73","line":"    ;;"},
{"lineNum":"   74","line":"  --print-output-on-failure)"},
{"lineNum":"   75","line":"    flags+=(--print-output-on-failure)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   76","line":"    ;;"},
{"lineNum":"   77","line":"  --show-output-of-passing-tests)"},
{"lineNum":"   78","line":"    flags+=(--show-output-of-passing-tests)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   79","line":"    BATS_SHOW_OUTPUT_OF_SUCCEEDING_TESTS=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   80","line":"    ;;"},
{"lineNum":"   81","line":"  --verbose-run)"},
{"lineNum":"   82","line":"    flags+=(--verbose-run)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   83","line":"    ;;"},
{"lineNum":"   84","line":"  --gather-test-outputs-in)"},
{"lineNum":"   85","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   86","line":"    flags+=(--gather-test-outputs-in \"$1\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   87","line":"    ;;"},
{"lineNum":"   88","line":"  --setup-suite-file)"},
{"lineNum":"   89","line":"    shift","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   90","line":"    setup_suite_file=\"$1\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"   91","line":"    ;;"},
{"lineNum":"   92","line":"  *)"},
{"lineNum":"   93","line":"    break","class":"lineCov","hits":"1","order":"114","possible_hits":"0",},
{"lineNum":"   94","line":"    ;;"},
{"lineNum":"   95","line":"  esac"},
{"lineNum":"   96","line":"  shift","class":"lineCov","hits":"1","order":"113","possible_hits":"0",},
{"lineNum":"   97","line":"done"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"if [[ \"$num_jobs\" != 1 ]]; then","class":"lineCov","hits":"1","order":"115","possible_hits":"0",},
{"lineNum":"  100","line":"  if ! type -p parallel >/dev/null && parallel --version &>/dev/null && [[ -z \"$bats_no_parallelize_across_files\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  101","line":"    abort \"Cannot execute \\\"${num_jobs}\\\" jobs without GNU parallel\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  102","line":"  fi"},
{"lineNum":"  103","line":"  # shellcheck source=lib/bats-core/semaphore.bash"},
{"lineNum":"  104","line":"  source \"${BATS_ROOT}/lib/bats-core/semaphore.bash\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  105","line":"  bats_semaphore_setup","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  106","line":"fi"},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"# create a file that contains all (filtered) tests to run from all files"},
{"lineNum":"  109","line":"TESTS_LIST_FILE=\"${BATS_RUN_TMPDIR}/test_list_file.txt\"","class":"lineCov","hits":"1","order":"116","possible_hits":"0",},
{"lineNum":"  110","line":"focus_mode=","class":"lineCov","hits":"1","order":"117","possible_hits":"0",},
{"lineNum":"  111","line":"bats_gather_tests() {"},
{"lineNum":"  112","line":"  local line test_line tags","class":"lineCov","hits":"1","order":"126","possible_hits":"0",},
{"lineNum":"  113","line":"  all_tests=()"},
{"lineNum":"  114","line":"  for filename in \"$@\"; do","class":"lineCov","hits":"3","order":"127","possible_hits":"0",},
{"lineNum":"  115","line":"    if [[ ! -f \"$filename\" ]]; then","class":"lineCov","hits":"1","order":"128","possible_hits":"0",},
{"lineNum":"  116","line":"      abort \"Test file \\\"${filename}\\\" does not exist\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  117","line":"    fi"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"    test_names=()"},
{"lineNum":"  120","line":"    test_dupes=()"},
{"lineNum":"  121","line":"    while read -r line; do","class":"lineCov","hits":"729","order":"129","possible_hits":"0",},
{"lineNum":"  122","line":"      if [[ ! \"$line\" =~ ^bats_test_function\\  ]]; then","class":"lineCov","hits":"735","order":"148","possible_hits":"0",},
{"lineNum":"  123","line":"        continue","class":"lineCov","hits":"705","order":"149","possible_hits":"0",},
{"lineNum":"  124","line":"      fi"},
{"lineNum":"  125","line":"      line=\"${line%$\'\\r\'}\"","class":"lineCov","hits":"21","order":"183","possible_hits":"0",},
{"lineNum":"  126","line":"      line=\"${line#* }\"","class":"lineCov","hits":"21","order":"184","possible_hits":"0",},
{"lineNum":"  127","line":"      TAG_REGEX=\"--tags \'(.*)\' (.*)\"","class":"lineCov","hits":"21","order":"185","possible_hits":"0",},
{"lineNum":"  128","line":"      if [[ \"$line\" =~ $TAG_REGEX ]]; then","class":"lineCov","hits":"21","order":"186","possible_hits":"0",},
{"lineNum":"  129","line":"        IFS=, read -ra tags <<<\"${BASH_REMATCH[1]}\" || true","class":"lineCov","hits":"42","order":"187","possible_hits":"0",},
{"lineNum":"  130","line":"        line=\"${BASH_REMATCH[2]}\"","class":"lineCov","hits":"21","order":"188","possible_hits":"0",},
{"lineNum":"  131","line":"      else"},
{"lineNum":"  132","line":"        tags=()"},
{"lineNum":"  133","line":"      fi"},
{"lineNum":"  134","line":"      # is this test focused?"},
{"lineNum":"  135","line":"      if bats_all_in tags \'bats:focus\'; then","class":"lineCov","hits":"21","order":"189","possible_hits":"0",},
{"lineNum":"  136","line":"        if [[ $focus_mode == 1 ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  137","line":"          # focused tests in focus mode should just be registered"},
{"lineNum":"  138","line":"          :","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  139","line":"        else"},
{"lineNum":"  140","line":"          # the current test enables focus mode ..."},
{"lineNum":"  141","line":"          focus_mode=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  142","line":"          # ... -> remove previously found, unfocused tests"},
{"lineNum":"  143","line":"          all_tests=()"},
{"lineNum":"  144","line":"          : > \"$TESTS_LIST_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  145","line":"        fi"},
{"lineNum":"  146","line":"      elif [[ $focus_mode == 1 ]]; then","class":"lineCov","hits":"21","order":"200","possible_hits":"0",},
{"lineNum":"  147","line":"        # the current test is not focused but focus mode is enabled -> filter out"},
{"lineNum":"  148","line":"        continue","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  149","line":"        # no else -> unfocused tests outside focus mode should just be registered"},
{"lineNum":"  150","line":"      fi"},
{"lineNum":"  151","line":"      if [[ ${#filter_tags_list[@]} -gt 0 ]]; then","class":"lineCov","hits":"21","order":"201","possible_hits":"0",},
{"lineNum":"  152","line":"        local match=","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  153","line":"        for filter_tags in \"${filter_tags_list[@]}\"; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  154","line":"          # empty search tags only match empty test tags!"},
{"lineNum":"  155","line":"          if [[ -z \"$filter_tags\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  156","line":"            if [[ ${#tags[@]} -eq 0 ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  157","line":"              match=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  158","line":"              break","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  159","line":"            fi"},
{"lineNum":"  160","line":"            continue","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  161","line":"          fi"},
{"lineNum":"  162","line":"          local -a positive_filter_tags=() negative_filter_tags=()","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  163","line":"          IFS=, read -ra filter_tags <<<\"$filter_tags\" || true","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  164","line":"          for filter_tag in \"${filter_tags[@]}\"; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  165","line":"            if [[ $filter_tag == !* ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  166","line":"              bats_trim filter_tag \"${filter_tag#!}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  167","line":"              negative_filter_tags+=(\"${filter_tag}\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  168","line":"            else"},
{"lineNum":"  169","line":"              positive_filter_tags+=(\"${filter_tag}\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  170","line":"            fi"},
{"lineNum":"  171","line":"          done"},
{"lineNum":"  172","line":"          if bats_append_arrays_as_args positive_filter_tags -- bats_all_in tags &&","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  173","line":"            ! bats_append_arrays_as_args negative_filter_tags -- bats_any_in tags; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  174","line":"            match=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  175","line":"          fi"},
{"lineNum":"  176","line":"        done"},
{"lineNum":"  177","line":"        if [[ -z \"$match\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  178","line":"          continue","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  179","line":"        fi"},
{"lineNum":"  180","line":"      fi"},
{"lineNum":"  181","line":"      test_line=$(printf \"%s\\t%s\" \"$filename\" \"$line\")","class":"lineCov","hits":"42","order":"202","possible_hits":"0",},
{"lineNum":"  182","line":"      all_tests+=(\"$test_line\")","class":"lineCov","hits":"21","order":"203","possible_hits":"0",},
{"lineNum":"  183","line":"      printf \"%s\\n\" \"$test_line\" >>\"$TESTS_LIST_FILE\"","class":"lineCov","hits":"21","order":"204","possible_hits":"0",},
{"lineNum":"  184","line":"      # avoid unbound variable errors on empty array expansion with old bash versions"},
{"lineNum":"  185","line":"      if [[ ${#test_names[@]} -gt 0 && \" ${test_names[*]} \" == *\" $line \"* ]]; then","class":"lineCov","hits":"41","order":"205","possible_hits":"0",},
{"lineNum":"  186","line":"        test_dupes+=(\"$line\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  187","line":"        continue","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  188","line":"      fi"},
{"lineNum":"  189","line":"      test_names+=(\"$line\")","class":"lineCov","hits":"21","order":"206","possible_hits":"0",},
{"lineNum":"  190","line":"    done < <(BATS_TEST_FILTER=\"$filter\" bats-preprocess \"$filename\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"    if [[ \"${#test_dupes[@]}\" -ne 0 ]]; then","class":"lineCov","hits":"1","order":"207","possible_hits":"0",},
{"lineNum":"  193","line":"      abort \"Duplicate test name(s) in file \\\"${filename}\\\": ${test_dupes[*]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  194","line":"    fi"},
{"lineNum":"  195","line":"  done"},
{"lineNum":"  196","line":""},
{"lineNum":"  197","line":"  test_count=\"${#all_tests[@]}\"","class":"lineCov","hits":"1","order":"208","possible_hits":"0",},
{"lineNum":"  198","line":"}"},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"TEST_ROOT=${1-}","class":"lineCov","hits":"1","order":"118","possible_hits":"0",},
{"lineNum":"  201","line":"TEST_ROOT=${TEST_ROOT%/*}","class":"lineCov","hits":"1","order":"119","possible_hits":"0",},
{"lineNum":"  202","line":"BATS_RUN_LOGS_DIRECTORY=\"$TEST_ROOT/.bats/run-logs\"","class":"lineCov","hits":"1","order":"120","possible_hits":"0",},
{"lineNum":"  203","line":"if [[ ! -d \"$BATS_RUN_LOGS_DIRECTORY\" ]]; then","class":"lineCov","hits":"1","order":"121","possible_hits":"0",},
{"lineNum":"  204","line":"  if [[ -n \"$filter_status\" ]]; then","class":"lineCov","hits":"1","order":"122","possible_hits":"0",},
{"lineNum":"  205","line":"    printf \"Error: --filter-status needs \'%s/\' to save failed tests. Please create this folder, add it to .gitignore and try again.\\n\" \"$BATS_RUN_LOGS_DIRECTORY\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  206","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  207","line":"  else"},
{"lineNum":"  208","line":"    BATS_RUN_LOGS_DIRECTORY=","class":"lineCov","hits":"1","order":"123","possible_hits":"0",},
{"lineNum":"  209","line":"  fi"},
{"lineNum":"  210","line":"  # discard via sink instead of having a conditional later"},
{"lineNum":"  211","line":"  export BATS_RUNLOG_FILE=\'/dev/null\'","class":"lineCov","hits":"2","order":"124","possible_hits":"0",},
{"lineNum":"  212","line":"else"},
{"lineNum":"  213","line":"  # use UTC (-u) to avoid problems with TZ changes"},
{"lineNum":"  214","line":"  BATS_RUNLOG_DATE=$(date -u \'+%Y-%m-%d %H:%M:%S UTC\')","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  215","line":"  export BATS_RUNLOG_FILE=\"$BATS_RUN_LOGS_DIRECTORY/${BATS_RUNLOG_DATE}.log\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  216","line":"  if [[ ! -w \"$BATS_RUN_LOGS_DIRECTORY\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  217","line":"    printf \"WARNING: Cannot write in %s. This run will not write a log!\\n\" \"$BATS_RUN_LOGS_DIRECTORY\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  218","line":"    BATS_RUNLOG_FILE=\'/dev/null\' # disable runlog file","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  219","line":"  fi"},
{"lineNum":"  220","line":"fi"},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"bats_gather_tests \"$@\"","class":"lineCov","hits":"1","order":"125","possible_hits":"0",},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"if [[ -n \"$filter_status\" ]]; then","class":"lineCov","hits":"1","order":"209","possible_hits":"0",},
{"lineNum":"  225","line":"  case \"$filter_status\" in","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  226","line":"  failed)"},
{"lineNum":"  227","line":"    bats_filter_test_by_status() { # <line>"},
{"lineNum":"  228","line":"      ! bats_binary_search \"$1\" \"passed_tests\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  229","line":"    }"},
{"lineNum":"  230","line":"    ;;"},
{"lineNum":"  231","line":"  passed)"},
{"lineNum":"  232","line":"    bats_filter_test_by_status() {"},
{"lineNum":"  233","line":"      ! bats_binary_search \"$1\" \"failed_tests\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  234","line":"    }"},
{"lineNum":"  235","line":"    ;;"},
{"lineNum":"  236","line":"  missed)"},
{"lineNum":"  237","line":"    bats_filter_test_by_status() {"},
{"lineNum":"  238","line":"      ! bats_binary_search \"$1\" \"failed_tests\" && ! bats_binary_search \"$1\" \"passed_tests\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  239","line":"    }"},
{"lineNum":"  240","line":"    ;;"},
{"lineNum":"  241","line":"  *)"},
{"lineNum":"  242","line":"    printf \"Error: Unknown value \'%s\' for --filter-status. Valid values are \'failed\' and \'missed\'.\\n\" \"$filter_status\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  243","line":"    exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  244","line":"    ;;"},
{"lineNum":"  245","line":"  esac"},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"  if IFS=\'\' read -d $\'\\n\' -r BATS_PREVIOUS_RUNLOG_FILE < <(ls -1r \"$BATS_RUN_LOGS_DIRECTORY\"); then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  248","line":"    BATS_PREVIOUS_RUNLOG_FILE=\"$BATS_RUN_LOGS_DIRECTORY/$BATS_PREVIOUS_RUNLOG_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  249","line":"    if [[ $BATS_PREVIOUS_RUNLOG_FILE == \"$BATS_RUNLOG_FILE\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  250","line":"      count=$(find \"$BATS_RUN_LOGS_DIRECTORY\" -name \"$BATS_RUNLOG_DATE*\" | wc -l)","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  251","line":"      BATS_RUNLOG_FILE=\"$BATS_RUN_LOGS_DIRECTORY/${BATS_RUNLOG_DATE}-$count.log\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  252","line":"    fi"},
{"lineNum":"  253","line":"    failed_tests=()"},
{"lineNum":"  254","line":"    passed_tests=()"},
{"lineNum":"  255","line":"    # store tests that were already filtered out in the last run for the same filter reason"},
{"lineNum":"  256","line":"    last_filtered_tests=()"},
{"lineNum":"  257","line":"    i=0","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  258","line":"    while read -rd $\'\\n\' line; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  259","line":"      ((++i))"},
{"lineNum":"  260","line":"      case \"$line\" in","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  261","line":"      \"passed \"*)"},
{"lineNum":"  262","line":"        passed_tests+=(\"${line#passed }\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  263","line":"        ;;"},
{"lineNum":"  264","line":"      \"failed \"*)"},
{"lineNum":"  265","line":"        failed_tests+=(\"${line#failed }\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  266","line":"        ;;"},
{"lineNum":"  267","line":"      \"status-filtered $filter_status\"*) # pick up tests that were filtered in the last round for the same status","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  268","line":"        last_filtered_tests+=(\"${line#status-filtered \"$filter_status\" }\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  269","line":"        ;;"},
{"lineNum":"  270","line":"      \"status-filtered \"*) # ignore other status-filtered lines","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  271","line":"        ;;"},
{"lineNum":"  272","line":"      \"#\"*) # allow for comments","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  273","line":"        ;;"},
{"lineNum":"  274","line":"      *)"},
{"lineNum":"  275","line":"        printf \"Error: %s:%d: Invalid format: %s\\n\" \"$BATS_PREVIOUS_RUNLOG_FILE\" \"$i\" \"$line\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  276","line":"        exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  277","line":"        ;;"},
{"lineNum":"  278","line":"      esac"},
{"lineNum":"  279","line":"    done < <(sort \"$BATS_PREVIOUS_RUNLOG_FILE\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":"    filtered_tests=()"},
{"lineNum":"  282","line":"    for line in \"${all_tests[@]}\"; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  283","line":"      if bats_filter_test_by_status \"$line\" && ! bats_binary_search \"$line\" last_filtered_tests; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  284","line":"        printf \"%s\\n\" \"$line\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  285","line":"        filtered_tests+=(\"$line\")","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  286","line":"      else"},
{"lineNum":"  287","line":"        printf \"status-filtered %s %s\\n\" \"$filter_status\" \"$line\" >>\"$BATS_RUNLOG_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  288","line":"      fi"},
{"lineNum":"  289","line":"    done >\"$TESTS_LIST_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"    # save filtered tests to exclude them again in next round"},
{"lineNum":"  292","line":"    for test_line in \"${last_filtered_tests[@]}\"; do","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  293","line":"      printf \"status-filtered %s %s\\n\" \"$filter_status\" \"$test_line\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  294","line":"    done >>\"$BATS_RUNLOG_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"    test_count=\"${#filtered_tests[@]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  297","line":"    if [[ ${#failed_tests[@]} -eq 0 && ${#filtered_tests[@]} -eq 0 ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  298","line":"      printf \"There where no failed tests in the last recorded run.\\n\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  299","line":"    fi"},
{"lineNum":"  300","line":"  else"},
{"lineNum":"  301","line":"    printf \"No recording of previous runs found. Running all tests!\\n\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  302","line":"  fi"},
{"lineNum":"  303","line":"fi"},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"if [[ -n \"$count_only_flag\" ]]; then","class":"lineCov","hits":"1","order":"210","possible_hits":"0",},
{"lineNum":"  306","line":"  printf \'%d\\n\' \"${test_count}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  307","line":"  exit","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  308","line":"fi"},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"if [[ -n \"$bats_no_parallelize_across_files\" ]] && [[ ! \"$num_jobs\" -gt 1 ]]; then","class":"lineCov","hits":"1","order":"211","possible_hits":"0",},
{"lineNum":"  311","line":"  abort \"The flag --no-parallelize-across-files requires at least --jobs 2\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  312","line":"fi"},
{"lineNum":"  313","line":""},
{"lineNum":"  314","line":"if [[ -n \"$bats_no_parallelize_within_files\" ]] && [[ ! \"$num_jobs\" -gt 1 ]]; then","class":"lineCov","hits":"1","order":"212","possible_hits":"0",},
{"lineNum":"  315","line":"  abort \"The flag --no-parallelize-across-files requires at least --jobs 2\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  316","line":"fi"},
{"lineNum":"  317","line":""},
{"lineNum":"  318","line":"# only abort on the lowest levels"},
{"lineNum":"  319","line":"trap \'BATS_INTERRUPTED=true\' INT","class":"lineCov","hits":"1","order":"213","possible_hits":"0",},
{"lineNum":"  320","line":""},
{"lineNum":"  321","line":"if [[ -n \"$focus_mode\" ]]; then","class":"lineCov","hits":"1","order":"214","possible_hits":"0",},
{"lineNum":"  322","line":"  printf \"WARNING: This test run only contains tests tagged \\`bats:focus\\`!\\n\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  323","line":"fi"},
{"lineNum":"  324","line":""},
{"lineNum":"  325","line":"bats_exec_suite_status=0","class":"lineCov","hits":"1","order":"215","possible_hits":"0",},
{"lineNum":"  326","line":"printf \'1..%d\\n\' \"${test_count}\"","class":"lineCov","hits":"1","order":"216","possible_hits":"0",},
{"lineNum":"  327","line":""},
{"lineNum":"  328","line":"# No point on continuing if there\'s no tests."},
{"lineNum":"  329","line":"if [[ \"${test_count}\" == 0 ]]; then","class":"lineCov","hits":"1","order":"217","possible_hits":"0",},
{"lineNum":"  330","line":"  exit","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  331","line":"fi"},
{"lineNum":"  332","line":""},
{"lineNum":"  333","line":"export BATS_SUITE_TMPDIR=\"${BATS_RUN_TMPDIR}/suite\"","class":"lineCov","hits":"2","order":"218","possible_hits":"0",},
{"lineNum":"  334","line":"if ! mkdir \"$BATS_SUITE_TMPDIR\"; then","class":"lineCov","hits":"1","order":"219","possible_hits":"0",},
{"lineNum":"  335","line":"  printf \'%s\\n\' \"Failed to create BATS_SUITE_TMPDIR\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  336","line":"  exit 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  337","line":"fi"},
{"lineNum":"  338","line":""},
{"lineNum":"  339","line":"# Deduplicate filenames (without reordering) to avoid running duplicate tests n by n times."},
{"lineNum":"  340","line":"# (see https://github.com/bats-core/bats-core/issues/329)"},
{"lineNum":"  341","line":"# If a file was specified multiple times, we already got it repeatedly in our TESTS_LIST_FILE."},
{"lineNum":"  342","line":"# Thus, it suffices to bats-exec-file it once to run all repeated tests on it."},
{"lineNum":"  343","line":"IFS=$\'\\n\' read -d \'\' -r -a BATS_UNIQUE_TEST_FILENAMES < <(printf \"%s\\n\" \"$@\" | nl | sort -k 2 | uniq -f 1 | sort -n | cut -f 2-) || true","class":"lineCov","hits":"9","order":"225","possible_hits":"0",},
{"lineNum":"  344","line":""},
{"lineNum":"  345","line":"# shellcheck source=lib/bats-core/tracing.bash"},
{"lineNum":"  346","line":"source \"$BATS_ROOT/lib/bats-core/tracing.bash\"","class":"lineCov","hits":"1","order":"226","possible_hits":"0",},
{"lineNum":"  347","line":"bats_setup_tracing","class":"lineCov","hits":"1","order":"228","possible_hits":"0",},
{"lineNum":"  348","line":""},
{"lineNum":"  349","line":"trap bats_suite_exit_trap EXIT","class":"lineCov","hits":"2","order":"258","possible_hits":"0",},
{"lineNum":"  350","line":""},
{"lineNum":"  351","line":"exec 3<&1","class":"lineCov","hits":"2","order":"259","possible_hits":"0",},
{"lineNum":"  352","line":""},
{"lineNum":"  353","line":"# shellcheck disable=SC2317"},
{"lineNum":"  354","line":"bats_suite_exit_trap() {"},
{"lineNum":"  355","line":"  local print_bats_out=\"${BATS_SHOW_OUTPUT_OF_SUCCEEDING_TESTS}\"","class":"lineCov","hits":"2","order":"806","possible_hits":"0",},
{"lineNum":"  356","line":"  if [[ -z \"${BATS_SETUP_SUITE_COMPLETED}\" || -z \"${BATS_TEARDOWN_SUITE_COMPLETED}\" ]]; then","class":"lineCov","hits":"3","order":"807","possible_hits":"0",},
{"lineNum":"  357","line":"    if [[ -z \"${BATS_SETUP_SUITE_COMPLETED}\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  358","line":"      printf \"not ok 1 setup_suite\\n\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  359","line":"    elif [[ -z \"${BATS_TEARDOWN_SUITE_COMPLETED}\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  360","line":"      printf \"not ok %d teardown_suite\\n\" $((test_count + 1))","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  361","line":"    fi"},
{"lineNum":"  362","line":"    local stack_trace","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  363","line":"    bats_get_failure_stack_trace stack_trace","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  364","line":"    bats_print_stack_trace \"${stack_trace[@]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  365","line":"    bats_print_failed_command \"${stack_trace[@]}\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  366","line":"    print_bats_out=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  367","line":"    bats_exec_suite_status=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  368","line":"  fi"},
{"lineNum":"  369","line":""},
{"lineNum":"  370","line":"  if [[ -n \"$print_bats_out\" ]]; then","class":"lineCov","hits":"2","order":"808","possible_hits":"0",},
{"lineNum":"  371","line":"    bats_prefix_lines_for_tap_output <\"$BATS_OUT\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  372","line":"  fi"},
{"lineNum":"  373","line":""},
{"lineNum":"  374","line":"  if [[ ${BATS_INTERRUPTED-NOTSET} != NOTSET ]]; then","class":"lineCov","hits":"2","order":"809","possible_hits":"0",},
{"lineNum":"  375","line":"    printf \"\\n# Received SIGINT, aborting ...\\n\\n\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  376","line":"  fi"},
{"lineNum":"  377","line":""},
{"lineNum":"  378","line":"  if [[ -d \"$BATS_RUN_LOGS_DIRECTORY\" && -n \"${BATS_INTERRUPTED:-}\" ]]; then","class":"lineCov","hits":"2","order":"810","possible_hits":"0",},
{"lineNum":"  379","line":"    # aborting a test run with CTRL+C does not save the runlog file"},
{"lineNum":"  380","line":"    [[ \"$BATS_RUNLOG_FILE\" != /dev/null ]] && rm \"$BATS_RUNLOG_FILE\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  381","line":"  fi"},
{"lineNum":"  382","line":"  exit \"$bats_exec_suite_status\"","class":"lineCov","hits":"2","order":"811","possible_hits":"0",},
{"lineNum":"  383","line":"} >&3","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  384","line":""},
{"lineNum":"  385","line":"bats_run_teardown_suite() {"},
{"lineNum":"  386","line":"  local bats_teardown_suite_status=0","class":"lineCov","hits":"2","order":"797","possible_hits":"0",},
{"lineNum":"  387","line":"  # avoid being called twice, in case this is not called through bats_teardown_suite_trap"},
{"lineNum":"  388","line":"  # but from the end of file"},
{"lineNum":"  389","line":"  trap bats_suite_exit_trap EXIT","class":"lineCov","hits":"2","order":"798","possible_hits":"0",},
{"lineNum":"  390","line":"  BATS_TEARDOWN_SUITE_COMPLETED=","class":"lineCov","hits":"2","order":"799","possible_hits":"0",},
{"lineNum":"  391","line":"  teardown_suite >>\"$BATS_OUT\" 2>&1 || bats_teardown_suite_status=$?","class":"lineCov","hits":"2","order":"800","possible_hits":"0",},
{"lineNum":"  392","line":"  if ((bats_teardown_suite_status == 0)); then","class":"lineCov","hits":"2","order":"802","possible_hits":"0",},
{"lineNum":"  393","line":"    BATS_TEARDOWN_SUITE_COMPLETED=1","class":"lineCov","hits":"2","order":"803","possible_hits":"0",},
{"lineNum":"  394","line":"  elif [[ -n \"${BATS_SETUP_SUITE_COMPLETED:-}\" ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  395","line":"    BATS_DEBUG_LAST_STACK_TRACE_IS_VALID=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  396","line":"    BATS_ERROR_STATUS=$bats_teardown_suite_status","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  397","line":"    return $BATS_ERROR_STATUS","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  398","line":"  fi"},
{"lineNum":"  399","line":"}"},
{"lineNum":"  400","line":""},
{"lineNum":"  401","line":"# shellcheck disable=SC2317"},
{"lineNum":"  402","line":"bats_teardown_suite_trap() {"},
{"lineNum":"  403","line":"  bats_run_teardown_suite","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  404","line":"  bats_suite_exit_trap","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  405","line":"}"},
{"lineNum":"  406","line":""},
{"lineNum":"  407","line":"teardown_suite() {"},
{"lineNum":"  408","line":"  :","class":"lineCov","hits":"2","order":"801","possible_hits":"0",},
{"lineNum":"  409","line":"}"},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"trap bats_teardown_suite_trap EXIT","class":"lineCov","hits":"2","order":"260","possible_hits":"0",},
{"lineNum":"  412","line":""},
{"lineNum":"  413","line":"BATS_OUT=\"$BATS_RUN_TMPDIR/suite.out\"","class":"lineCov","hits":"2","order":"261","possible_hits":"0",},
{"lineNum":"  414","line":"if [[ -n \"$setup_suite_file\" ]]; then","class":"lineCov","hits":"2","order":"262","possible_hits":"0",},
{"lineNum":"  415","line":"  setup_suite() {"},
{"lineNum":"  416","line":"    printf \"%s does not define \\`setup_suite()\\`\\n\" \"$setup_suite_file\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  417","line":"    return 1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  418","line":"  }"},
{"lineNum":"  419","line":""},
{"lineNum":"  420","line":"  # shellcheck disable=SC2034 # will be used in the sourced file below"},
{"lineNum":"  421","line":"  BATS_TEST_FILENAME=\"$setup_suite_file\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  422","line":"  # shellcheck source=lib/bats-core/test_functions.bash"},
{"lineNum":"  423","line":"  source \"$BATS_ROOT/lib/bats-core/test_functions.bash\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  424","line":""},
{"lineNum":"  425","line":"  # shellcheck disable=SC1090"},
{"lineNum":"  426","line":"  source \"$setup_suite_file\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  427","line":""},
{"lineNum":"  428","line":"  set -eET","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  429","line":"  export BATS_SETUP_SUITE_COMPLETED=","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  430","line":"  setup_suite >>\"$BATS_OUT\" 2>&1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  431","line":"  BATS_SETUP_SUITE_COMPLETED=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  432","line":"  set +ET","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  433","line":"else"},
{"lineNum":"  434","line":"  # prevent exit trap from printing an error because of incomplete setup_suite,"},
{"lineNum":"  435","line":"  # when there was none to execute"},
{"lineNum":"  436","line":"  BATS_SETUP_SUITE_COMPLETED=1","class":"lineCov","hits":"2","order":"263","possible_hits":"0",},
{"lineNum":"  437","line":"fi"},
{"lineNum":"  438","line":""},
{"lineNum":"  439","line":"if [[ \"$num_jobs\" -gt 1 ]] && [[ -z \"$bats_no_parallelize_across_files\" ]]; then","class":"lineCov","hits":"2","order":"264","possible_hits":"0",},
{"lineNum":"  440","line":"  # run files in parallel to get the maximum pool of parallel tasks"},
{"lineNum":"  441","line":"  # shellcheck disable=SC2086,SC2068"},
{"lineNum":"  442","line":"  # we need to handle the quoting of ${flags[@]} ourselves,"},
{"lineNum":"  443","line":"  # because parallel can only quote it as one"},
{"lineNum":"  444","line":"  parallel --keep-order --jobs \"$num_jobs\" bats-exec-file \"$(printf \"%q \" \"${flags[@]}\")\" \"{}\" \"$TESTS_LIST_FILE\" ::: \"${BATS_UNIQUE_TEST_FILENAMES[@]}\" 2>&1 || bats_exec_suite_status=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  445","line":"else"},
{"lineNum":"  446","line":"  for filename in \"${BATS_UNIQUE_TEST_FILENAMES[@]}\"; do","class":"lineCov","hits":"2","order":"265","possible_hits":"0",},
{"lineNum":"  447","line":"    if [[ \"${BATS_INTERRUPTED-NOTSET}\" != NOTSET ]]; then","class":"lineCov","hits":"2","order":"266","possible_hits":"0",},
{"lineNum":"  448","line":"      bats_exec_suite_status=130 # bash\'s code for SIGINT exits","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  449","line":"      break","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  450","line":"    fi"},
{"lineNum":"  451","line":"    bats-exec-file \"${flags[@]}\" \"$filename\" \"${TESTS_LIST_FILE}\" || bats_exec_suite_status=1","class":"lineCov","hits":"4","order":"267","possible_hits":"0",},
{"lineNum":"  452","line":"  done"},
{"lineNum":"  453","line":"fi"},
{"lineNum":"  454","line":""},
{"lineNum":"  455","line":"set -eET","class":"lineCov","hits":"2","order":"795","possible_hits":"0",},
{"lineNum":"  456","line":"bats_run_teardown_suite","class":"lineCov","hits":"2","order":"796","possible_hits":"0",},
{"lineNum":"  457","line":""},
{"lineNum":"  458","line":"if [[ \"$focus_mode\" == 1 && $bats_exec_suite_status -eq 0 ]]; then","class":"lineCov","hits":"2","order":"804","possible_hits":"0",},
{"lineNum":"  459","line":"  if [[ ${BATS_NO_FAIL_FOCUS_RUN-} == 1 ]]; then","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  460","line":"    printf \"WARNING: This test run only contains tests tagged \\`bats:focus\\`!\\n\"","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  461","line":"  else"},
{"lineNum":"  462","line":"    printf \"Marking test run as failed due to \\`bats:focus\\` tag. (Set \\`BATS_NO_FAIL_FOCUS_RUN=1\\` to disable.)\\n\" >&2","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  463","line":"    bats_exec_suite_status=1","class":"lineNoCov","hits":"0","possible_hits":"0",},
{"lineNum":"  464","line":"  fi"},
{"lineNum":"  465","line":"fi"},
{"lineNum":"  466","line":""},
{"lineNum":"  467","line":"exit \"$bats_exec_suite_status\" # the actual exit code will be set by the exit trap using bats_exec_suite_status","class":"lineCov","hits":"2","order":"805","possible_hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "bats", "date" : "2023-06-15 21:56:04", "instrumented" : 245, "covered" : 90,};
var merged_data = [];
