Adhoc tests

TERMINOLOGY:
- tests, testfiles = .ipynb files
- batspp = batspp library that uses bats-core
- batspp files = .batspp files (generated from jupyter_to_batspp.py)
- bats = Bash Automation Testing Script
- bats files = .bats files (generated from batspp library or ../simple_batspp.py)
- acc. = according

TODO:
- Add non-trivial tests as separate scripts.
- Add simple tests to scripts themselves (e.g., via EX comments as in disambiguate-parses.perl).

BUGS:
- batspp_report.py fails on first execution.
- jupyter_to_batspp.py supports mezcla != 1.3.6
- empty testfiles leads to error
- testfiles with missing iterations (or executions) leads to error

PREREQUISITES:
- bash_kernel (https://pypi.org/project/bash_kernel/)
- bats-core (https://github.com/bats-core/bats-core)
- batspp (https://pypi.org/project/batspp/)
- kcov (https://github.com/SimonKagstrom/kcov)
- mezcla (https://pypi.org/project/mezcla/)
- notebook (https://pypi.org/project/notebook/)


INFO:
- Tests written in Jupyter Notebooks (.ipynb)
- Tests with "NOBATSPP" suffix ignored by default (-a option in batspp_report.py removes the restriction)
- batspp_report.py generates reports  
- kcov_result.py creates summary statistics for kcov (HTML based) report generated by batspp_report.py
- summary_stats.bash automates the process of detection, generation and summarization of testfiles (output = summary_stats.txt)
- Scripts are well documented (use -h option)

WORKFLOW:
- jupyter_to_batspp.py converts testfiles to batspp files (.ipynb -> .batspp)
- batspp_report.py executes batspp files and stores them as bats files:
	- n = No reports generated
	- k = KCOV reports generated
	- t = txt based reports
	- a = includes all available testfiles
	- s = uses batspp library (default = ../simple_batspp.py)
- kcov_result.py summarizes the test results using KCOV files generated from batspp_report.py:
	- export = generates individual test coverage info (format = NN out of NN tests passed overall (NN.NN%)
	- summary = prints summary only
	- ro = prints individual reports only
	- list = prints list of testfiles acc. to success rate (in desc.)
	- include = only include the tests mentioned
	- exclude = excludes tests mentioned
- summary_stats.bash automates entire process mentioned above (output = summary_stats.txt) 

DIRECTORIES:
- bats-only/ = .bats file storage (result of batspp or ../simple_batspp.py)
- batspp-only/ = .batspp file storage (result of ./jupyter_to_batspp.py)
- coverage-reports/ = individual test coverage info storage (result of ./kcov_result.py --export)
- kcov-output/ = KCOV reports storage generated from batsfile (result of ./batspp_report.py -k)
- temp/, tmp/ = Temporary storage for testfiles
- txt-reports/ = .txt report storage (result of ./batspp_report.py -t)

